#!/usr/bin/env bash
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
DOTFILES_DIR=${SCRIPT_DIR%/*}

BIN_NAME=$(basename "$0")
COMMAND_NAME=$1
# SUB_COMMAND_NAME=$2

sub_help() {
  echo "Usage: $BIN_NAME <command>"
  echo
  echo "Commands:"
  echo "   clean            Clean up caches (brew, gem)"
  echo "   edit             Open dotfiles in IDE ($DOTFILES_IDE) and Git GUI ($DOTFILES_GIT_GUI)"
  echo "   help             This help message"
  echo "   macos            Apply macOS system defaults"
  echo "   test             Run tests"
  echo "   update           Update packages and pkg managers (OS, brew, npm, gem)"
}

sub_edit() {
  sh -c "$DOTFILES_IDE $DOTFILES_DIR"
  sh -c "$DOTFILES_GIT_GUI $DOTFILES_DIR"
}

sub_test() {
  bats "$DOTFILES_DIR"/test/*.bats
}

sub_update() {
  topgrade
}

sub_clean() {
  brew cleanup
  gem cleanup
}

sub_brew() {
  (cd "${DOTFILES_DIR}" || make TEST V=7)
}

case $COMMAND_NAME in
"" | "-h" | "--help")
  sub_help
  ;;
*)
  shift
  sub_"${COMMAND_NAME}" "$@"
  if [ $? = 127 ]; then
    echo "'$COMMAND_NAME' is not a known command or has errors." >&2
    sub_help
    exit 1
  fi
  ;;
esac
